# Redirect HTTP to HTTPS and optional configurations
server {
    listen 80;
    server_name your_domain_or_IP;

    # Redirect all HTTP requests to HTTPS with optional logging for HTTP requests
    access_log /var/log/nginx/your_domain_http_access.log;
    return 301 https://$server_name$request_uri;
}

# HTTPS configuration with enhanced features
server {
    listen 443 ssl http2; # Enable HTTP/2
    server_name your_domain_or_IP;

    ssl_certificate /path/to/your/fullchain.pem;
    ssl_certificate_key /path/to/your/privkey.pem;

    # Improve SSL with stronger settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Feature-Policy "geolocation 'self'; vibrate 'none'";

    # Serve static files with advanced caching and performance settings
    location /static/ {
        alias /path/to/your/flaskapp/static/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    # Proxy the rest to Gunicorn with additional configurations
    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Buffering off for real-time response behavior
        proxy_buffering off;

        # Adjust timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Performance optimizations
    client_max_body_size 20M;
    keepalive_timeout 10;

    # Optional: Rate limiting to protect against DoS attacks
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
    limit_req zone=mylimit burst=20 nodelay;

    # Logging
    access_log /var/log/nginx/your_domain_ssl_access.log;
    error_log /var/log/nginx/your_domain_ssl_error.log;
}